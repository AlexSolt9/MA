import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([15.059, 6818.135, -0.68, 0, -1.692, 196.65, 6.045,3.465, 0.113, -2.370, 0.150, 4.153, 0.097, 8.812 ]).reshape((-1, 1))
y = np.array([89.148, 13062.052, 1.357, 28.107, -0.177, 364.172, 45.512, 30.454, 0.870, -1.933, 0.877, -1.337, 0.778, 0.511])


>>> print(x)
[[15.059]
[6818.135]
[-0.68]
[0]
[-1.692]
[196.65]
[6.045]
[3.465]
[0.113]
[-2.370]
[0.150]
[4.153]
[0.097]
[8.812]
>>> print(y)
[89.148 13062.052 1.357 28.107 -0.177 364.172 45.512 30.454 0.870 -1.933 0.877 -1.337 0.778 0.511]

model = LinearRegression()

model.fit(x, y)

model = LinearRegression().fit(x, y)

>>> r_sq = model.score(x, y)
>>> print('coefficient of determination:', r_sq)
coefficient of determination: 0.999964455

>>> print('intercept:', model.intercept_)
intercept: 9.148434462

>>> print('slope:', model.coef_)
slope: [0.54]

from sklearn.metrics import mean_absolute_error

mape = mean_absolute_error(y_test, y_predicted) / y_test.abs().sum(4.70%)
